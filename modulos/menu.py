from modulos.primos import encontrar_primos_gemelos #importamos la funci√≥n encontrar_primos_gemelos
from modulos.palindromos import encontrar_primos_palindromicos #importamos la funci√≥n encontrar_primos_palindromicos

def mostrar_menu(): #definimos la funci√≥n mostrar_menu
    while True:
        print("\n **************Bienvenidos al programa de n√∫meros primos***********")
        print("\nüî¢üî¢üî¢ N√∫meros Primos üî¢üî¢üî¢")
        print("\nSeleccione una opci√≥n:")
        print(" 1Ô∏è‚É£ 1. Encontrar n√∫meros primos gemelos")
        print(" 2Ô∏è‚É£ 2. Encontrar n√∫meros primos palindr√≥micos")
        print(" 3Ô∏è‚É£ 3. Salir - Cerrar el programa - Bye Bye")

        opcion = input("> ").strip() #pedimos al usuario que ingrese una opci√≥n

        if opcion == "1": #si la opci√≥n es 1
            try: #intentamos
                limite = int(input("Ingrese el l√≠mite superior: ").strip()) #pedimos al usuario que ingrese el l√≠mite superior
                gemelos = encontrar_primos_gemelos(limite) #llamamos a la funci√≥n encontrar_primos_gemelos
                print("Pares de primos gemelos encontrados:", ", ".join(map(str, gemelos))) #imprimimos los pares de primos gemelos
            except ValueError:  #si hay un error
                print("‚ùå Error: Ingrese un n√∫mero entero v√°lido.") #imprimimos un mensaje de error

        elif opcion == "2": #si la opci√≥n es 2 
            try:
                limite = int(input("Ingrese el l√≠mite superior: ").strip()) #pedimos al usuario que ingrese el l√≠mite superior
                palindromos = encontrar_primos_palindromicos(limite)  #llamamos a la funci√≥n encontrar_primos_palindromicos 

                if palindromos: #si hay pal√≠ndromos 
                    print("N√∫meros primos palindr√≥micos encontrados:", ", ".join(map(str, palindromos))) #imprimimos los n√∫meros primos palindr√≥micos
                else: #si no hay pal√≠ndromos
                    print("No se encontraron n√∫meros primos palindr√≥micos en este rango.") #imprimimos un mensaje
            except ValueError: #si hay un error
                print("‚ùå Error: Ingrese un  n√∫mero entero v√°lido.") #imprimimos un mensaje de error

        elif opcion == "3": #si la opci√≥n es 3
            print("Saliendo del programa...") #imprimimos un mensaje
            break

        else:
            print("‚ùå Opci√≥n no v√°lida, intente de nuevo.") #imprimimos un mensaje de error

































